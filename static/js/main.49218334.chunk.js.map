{"version":3,"sources":["shapes/UserShape.js","components/Form/Button/Button.jsx","components/Form/TextInp/TextInp.jsx","components/Form/Select/Select.jsx","components/Form/Form.jsx","components/TodoList/TodoList.jsx","shapes/TodoShape.js","api/users.js","App.js","api/todos.js","index.js"],"names":["UserShape","PropTypes","shape","name","string","isRequired","id","number","React","memo","type","className","getValue","title","value","onChange","htmlFor","users","user","map","person","key","Form","state","userError","titleError","event","target","setState","trim","onSubmit","preventDefault","props","addTodo","length","find","this","PureComponent","completed","bool","todos","todo","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","preparedTodos","userId","usersFromApi","App","newTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49218334.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst UserShape = PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n}).isRequired;\n\nexport default UserShape;\n","import React from 'react';\n\nconst Button = () => (\n  <button\n    type=\"submit\"\n    className=\"form__button\"\n  >\n    Add\n  </button>\n);\n\nexport default React.memo(Button);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextInp = ({ getValue, title }) => (\n  <>\n    <input\n      type=\"text\"\n      className=\"form__text-input\"\n      name=\"title\"\n      id=\"new-todo-text\"\n      value={title}\n      onChange={getValue}\n    />\n    <label\n      htmlFor=\"new-todo-text\"\n      className=\"form__text-label\"\n    >\n      Todo Title\n    </label>\n  </>\n);\n\nTextInp.propTypes = {\n  getValue: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default React.memo(TextInp);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UserShape from '../../../shapes/UserShape';\n\nconst Select = ({ users, user, getValue }) => (\n  <>\n    <select\n      value={user}\n      className=\"form__select\"\n      name=\"user\"\n      onChange={getValue}\n    >\n      <option value=\"\">Choose a User</option>\n      {users.map(person => (\n        <option value={person.name} key={person.id}>\n          {person.name}\n        </option>\n      ))}\n    </select>\n  </>\n);\n\nSelect.propTypes = {\n  users: PropTypes.arrayOf(UserShape).isRequired,\n  getValue: PropTypes.func.isRequired,\n  user: PropTypes.string.isRequired,\n};\n\nexport default React.memo(Select);\n","import React, { PureComponent } from 'react';\n\nimport PropTypes from 'prop-types';\nimport UserShape from '../../shapes/UserShape';\n\nimport Button from './Button/Button';\nimport TextInp from './TextInp/TextInp';\nimport Select from './Select/Select';\n\nclass Form extends PureComponent {\n  state = {\n    user: '',\n    title: '',\n    userError: false,\n    titleError: false,\n  }\n\n  getValue = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value.trim(),\n    });\n  }\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { user, title } = this.state;\n    const { addTodo, users } = this.props;\n\n    if (!user.length) {\n      this.setState({\n        userError: true,\n      });\n\n      return;\n    }\n\n    if (!title.length) {\n      this.setState({\n        titleError: true,\n      });\n\n      return;\n    }\n\n    const currentUser = users.find(person => person.name === user);\n\n    addTodo(currentUser, title);\n\n    this.setState({\n      user: '',\n      title: '',\n      userError: false,\n      titleError: false,\n    });\n  }\n\n  render() {\n    const { users } = this.props;\n    const { user, title, userError, titleError } = this.state;\n    const { getValue, onSubmit } = this;\n\n    return (\n      <>\n        <form\n          className=\"form\"\n          onSubmit={onSubmit}\n        >\n          <Select users={users} user={user} getValue={getValue} />\n          <div className=\"form__text-input-container\">\n            <TextInp getValue={getValue} title={title} />\n          </div>\n          <Button />\n        </form>\n        {userError && <p className=\"error\">Please choose a user</p>}\n        {titleError && <p className=\"error\">Please enter the title</p>}\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  users: PropTypes.arrayOf(UserShape).isRequired,\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoShape from '../../shapes/TodoShape';\n\nconst TodoList = ({ todos }) => (\n  <div className=\"list-container\">\n    <h2 className=\"heading\">Todo List</h2>\n    <ul className=\"list\">\n      {todos.map(todo => (\n        <li\n          key={todo.id}\n          className=\"list__item item\"\n        >\n          <span className=\"item__user\">{`${todo.user.name}: `}</span>\n          <span className=\"item__title\">{todo.title}</span>\n          <input\n            type=\"checkbox\"\n            className=\"item__checkbox\"\n          />\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(TodoShape).isRequired,\n};\n\nexport default React.memo(TodoList);\n","import PropTypes from 'prop-types';\nimport UserShape from './UserShape';\n\nconst TodoShape = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n  user: UserShape.isRequired,\n}).isRequired;\n\nexport default TodoShape;\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React, { PureComponent } from 'react';\nimport Form from './components/Form/Form';\nimport TodoList from './components/TodoList/TodoList';\n\nimport './App.scss';\n\nimport usersFromApi from './api/users';\nimport todosFromApi from './api/todos';\n\nconst preparedTodos = todosFromApi.map(todo => ({\n  ...todo,\n  user: usersFromApi.find(user => user.id === todo.userId),\n}));\n\nclass App extends PureComponent {\n  state = {\n    todos: preparedTodos,\n  }\n\n  addTodo = (user, title) => {\n    const { todos } = this.state;\n\n    const newTodo = {\n      id: todos.length + 1,\n      title,\n      completed: false,\n      user,\n      userId: user.id,\n    };\n\n    this.setState(state => ({\n      todos: [...state.todos, newTodo],\n    }));\n  }\n\n  render() {\n    const { todos } = this.state;\n    const { addTodo } = this;\n\n    return (\n      <div className=\"App\">\n        <Form users={usersFromApi} addTodo={addTodo} />\n        <TodoList todos={todos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}